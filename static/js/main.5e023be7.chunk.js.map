{"version":3,"sources":["utils/enum/enum.ts","reportWebVitals.ts","redux/sidebar_reducer.ts","redux/app_reducer.ts","redux/store_redux.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navigation/Navigation.tsx","components/Navigation/NavigationContainer.tsx","App.tsx","AppHOC.tsx","index.tsx","redux/auth_reducer.ts","components/Navigation/Navigation.module.css","components/Header/Header.module.css","redux/profile_reducer.ts","components/Users/imgAva/blak_water.gif","components/comonComponents/Preloader.tsx","redux/constTypeAC/constTypies.ts","redux/dialogs_reducer.ts","redux/users_reducer.ts","components/Users/Users.module.css","api/api.ts"],"names":["ResultCode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","path","title","userDataInitialState","initialized","reducer","combineReducers","sidebarPage","state","profilePage","profile_reducer","dialogsPage","dialogs_reducer","users","users_reducer","auth","auth_reducer","form","formReducer","app","action","type","SET_INITIALIZED","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","memo","data","setLogoutThunkCreator","className","style","header","alt","src","loginBlock","resultCode","login","onClick","to","HeaderContainerAPI","this","props","Component","mapDispatchToProps","HeaderContainer","connect","Navigation","navigation","map","x","index","item","isActive","active","NavigationContainer","dispatch","test","News","lazy","Login","Music","Page404","Settings","UsersContainer","ProfileContainer","MessagesContainer","App","catchAllUnhandledErrors","console","warn","componentDidMount","initializeTC","addEventListener","removeEventListener","fallback","element","Preloader","AppHoc","basename","process","AppContainer","a","promise","setUserDataThunkCreator","Promise","all","renderEntireTree","ReactDOM","render","document","getElementById","subscribe","setUserDataAC","isAuth","SET_USER_DATA","id","email","messages","fieldsErrors","captchaURL","GET_CAPTCHA","url","authMeAPI","me","response","success","setLoginThunkCreator","userData","captcha","getCaptchaURL_ThunkCreator","stopSubmit","_error","logout","getCaptchaURL","module","exports","addPostAC","value","ADD_POST","v1","addLikeAC","postID","ADD_LIKE","setUserProfileAC","profile","SET_USER_PROFILE","setUserStatusAC","status","SET_USER_STATUS","setPhotoAC","file","SET_PHOTO","postData","message","like","comment","newPostText","userId","lookingForAJob","lookingForAJobDescription","fullName","contacts","vk","github","facebook","instagram","mainLink","twitter","website","youtube","aboutMe","photos","small","large","newPost","post","SET_USER_PROFILE_DATA","setUserThunkCreator","profileAPI","getUserData","setUserStatusThunkCreator","getUserStatus","updateUserStatusThunkCreator","updateUserStatus","log","putPhotoThunkCreator","putPhoto","setProfileDataThunkCreator","setEditMod","updateUserData","loader","ADD_TEXT_MESSAGE","FOLLOW","SET_USERS","CHANGE_PAGE","TOGGLE_IS_FETCHING_PAGE","TOGGLE_IS_FETCHING_USER","addTextMessageAC","dialogs","name","ava","text","copyState","el","push","followAC","userID","changePageAC","pageID","toggleIsFetchingPageAC","isFetchingPage","toggleIsFetchingUserAC","isFetchingUser","usersState","items","followed","pageSize","totalCount","error","currentPage","user","setPageThunkCreator","UserAPI","setUserOnPageAPI","followUnfollowCB","API_method","unFollowThunkCreator","followAPI","setUnFollow","followThunkCreator","setFollow","instance","axios","create","baseURL","withCredentials","headers","get","catch","res","delete","image","formData","FormData","append","put","rej"],"mappings":"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","file":"static/js/main.5e023be7.chunk.js","sourcesContent":["export enum ResultCode {\r\n  success,\r\n  error,\r\n  captcha=10\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { actionPT } from './store_redux';\r\nimport { ItemPT } from 'components/Navigation/Navigation';\r\n\r\nexport type sidebarATPT = ReturnType<typeof sidebarAC>\r\n\r\nconst initialState: Array<ItemPT> = [\r\n  { path: '/profile', title: 'Profile' },\r\n  { path: '/messages', title: 'Messages' },\r\n  { path: '/users', title: 'Users' },\r\n  { path: '/news', title: 'News' },\r\n  { path: '/music', title: 'Music' },\r\n  { path: '/settings', title: 'Settings' },\r\n  { path: '/login', title: 'Login' },\r\n];\r\n\r\nconst SIDE_BAR_TEST = 'SIDE_BAR_TEST';\r\n\r\nexport const sidebarAC = () => ({ type: SIDE_BAR_TEST } as const);\r\n\r\nexport const sidebar_reducer = (state: Array<ItemPT> = initialState, action: actionPT): Array<ItemPT> => {\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  let a = action;\r\n  return state;\r\n};\r\n","import { actionPT, BaseThunkType, ThunkType } from 'redux/store_redux';\r\nimport { setUserDataThunkCreator } from 'redux/auth_reducer';\r\nimport { FormAction } from 'redux-form';\r\nimport { SET_INITIALIZED } from 'redux/constTypeAC/constTypies';\r\n\r\nexport type setInitializedAPPACPT = ReturnType<typeof setInitializedAPPAC>\r\n\r\nexport type UserDataInitialStateType = {\r\n  initialized: boolean\r\n}\r\n\r\nexport const setInitializedAPPAC = (initialized: boolean) => ({\r\n  type: SET_INITIALIZED,\r\n  initialized,\r\n} as const);\r\n\r\nconst userDataInitialState: UserDataInitialStateType = {\r\n  initialized: false,\r\n};\r\n\r\nexport const app_reducer = (state = userDataInitialState, action: actionPT): UserDataInitialStateType => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return { ...state, initialized: action.initialized };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const initializeTC = (): ThunkType => async (dispatch) => {\r\n\r\n  let promise = dispatch(setUserDataThunkCreator()); // вызов второй санки // всегда возвращается promise\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(setInitializedAPPAC(true));\r\n    });\r\n};\r\n\r\n","import {\r\n  addLikeACPT,\r\n  addPostATPT,\r\n  profile_reducer, setPhotoACPT,\r\n  setUserProfileACPT, setUserProfileDataACPT,\r\n  setUserStatusACPT,\r\n} from './profile_reducer';\r\nimport { addTextMessageATPT, dialogs_reducer } from './dialogs_reducer';\r\nimport { sidebar_reducer, sidebarATPT } from './sidebar_reducer';\r\nimport {\r\n  changePageACPT,\r\n  followATPT,\r\n  setUsersATPT,\r\n  toggleIsFetchingPageACPT,\r\n  toggleIsFetchingUserACPT,\r\n  users_reducer,\r\n} from './users_reducer';\r\nimport { auth_reducer, getCaptchaACPT, setUserDataACPT } from './auth_reducer';\r\nimport {\r\n  Action,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Store,\r\n} from 'redux';\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { FormAction, reducer as formReducer } from 'redux-form';\r\nimport { app_reducer, setInitializedAPPACPT } from 'redux/app_reducer';\r\n\r\nexport type AppStatePT = ReturnType<typeof reducer>\r\n\r\nexport const reducer = combineReducers({\r\n  sidebarPage: sidebar_reducer,\r\n  profilePage: profile_reducer,\r\n  dialogsPage: dialogs_reducer,\r\n  users: users_reducer,\r\n  auth: auth_reducer,\r\n  form: formReducer,   // redux-form\r\n  app: app_reducer,\r\n});\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store: Store<AppStatePT> = createStore(reducer, compose(applyMiddleware(thunkMiddleware), composeEnhancers()));\r\n\r\n// // @ts-ignore\r\n// window.store = store;\r\n\r\nexport type actionPT =\r\n  addPostATPT\r\n  // | changePostACPT\r\n  | addTextMessageATPT\r\n  | sidebarATPT\r\n  | followATPT\r\n  | setUsersATPT\r\n  | changePageACPT\r\n  | toggleIsFetchingPageACPT\r\n  | toggleIsFetchingUserACPT\r\n  | addLikeACPT\r\n  | setUserProfileACPT\r\n  | setUserDataACPT\r\n  | setUserStatusACPT\r\n  | setInitializedAPPACPT\r\n  | setPhotoACPT\r\n  | setUserProfileDataACPT\r\n  | getCaptchaACPT\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStatePT, unknown, A>\r\n\r\nexport type ThunkType = BaseThunkType<actionPT | FormAction> //типизация для вызова санки внутри санки\r\n\r\n\r\n\r\n","import style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { memo } from 'react';\r\nimport { mapDispatchToPropsPT } from 'components/Header/HeaderContainer';\r\n\r\nexport  type userDataPT = {\r\n  data: {\r\n    id: number\r\n    login: string\r\n    email: string\r\n  },\r\n  messages: string[]\r\n  fieldsErrors: string[]\r\n  resultCode: number\r\n  isAuth: boolean  // it is not from API\r\n  captchaURL: string  // it is from another API\r\n}\r\n\r\nexport  type DataHeaderType = {\r\n  data: userDataPT\r\n}\r\n\r\nexport const Header = memo(({\r\n                              data,\r\n                              setLogoutThunkCreator,\r\n                            }: DataHeaderType & mapDispatchToPropsPT) => {\r\n\r\n  return (\r\n    <div className={style.header}>\r\n      <div>\r\n        <img alt={'logo'}\r\n             src='https://w7.pngwing.com/pngs/200/945/png-transparent-vitruvian-man-vinci-italian-renaissance-drawing-others-white-hand-monochrome.png' />\r\n        <div>LOGO</div>\r\n      </div>\r\n      <div className={style.loginBlock}>\r\n        {data.resultCode === 0\r\n          ? <div>{data.data.login}\r\n            <button onClick={setLogoutThunkCreator}>logout</button>\r\n          </div>\r\n          : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </div>\r\n  );\r\n});","import { DataHeaderType, Header } from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { setLogoutThunkCreator } from 'redux/auth_reducer';\r\nimport { AppStatePT } from 'redux/store_redux';\r\nimport { Component } from 'react';\r\n\r\nexport type mapDispatchToPropsPT = {\r\n  setLogoutThunkCreator: () => void\r\n}\r\n\r\nexport class HeaderContainerAPI extends Component<DataHeaderType & mapDispatchToPropsPT> {\r\n\r\n  render() {\r\n\r\n    let { data, setLogoutThunkCreator } = this.props;\r\n    return (\r\n      <Header data={data}\r\n              setLogoutThunkCreator={setLogoutThunkCreator}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStatePT): DataHeaderType => {\r\n  return { data: state.auth };\r\n};\r\n\r\nconst mapDispatchToProps: mapDispatchToPropsPT = {\r\n  setLogoutThunkCreator,\r\n};\r\n\r\nexport const HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(HeaderContainerAPI);","import { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navigation.module.css';\r\n\r\nexport type sidebarPT = {\r\n  sidebarPage: Array<ItemPT>\r\n}\r\nexport type ItemPT = {\r\n  path: string\r\n  title: string\r\n}\r\n\r\nexport const Navigation = memo((state: sidebarPT) => {\r\n\r\n  return (<div>\r\n      <nav className={style.navigation}>\r\n        {state.sidebarPage.map((x, index) =>\r\n          <div key={index} className={style.item}>\r\n            <NavLink to={x.path}\r\n                     className={({ isActive }) => isActive ? style.active : ''}> {x.title} </NavLink>\r\n          </div>,\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { Navigation, sidebarPT } from './Navigation';\r\nimport { actionPT, AppStatePT } from 'redux/store_redux';\r\n\r\nconst mapStateToProps = (state: AppStatePT): sidebarPT => {\r\n  return {\r\n    sidebarPage: state.sidebarPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (action: actionPT) => void) => {\r\n  return {\r\n    test: () => dispatch({ type: 'SIDE_BAR_TEST' }),\r\n  };\r\n};\r\n\r\nexport const NavigationContainer = connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\r\nimport { HeaderContainer } from 'components/Header/HeaderContainer';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport React, { Component, lazy, Suspense } from 'react';\r\nimport { NavigationContainer } from 'components/Navigation/NavigationContainer';\r\nimport { UserDataInitialStateType } from 'redux/app_reducer';\r\nimport { Preloader } from 'components/comonComponents/Preloader';\r\nimport { MapDispatchPT } from 'AppHOC';\r\n\r\nconst News = lazy(() => import('components/News/News'));\r\nconst Login = lazy(() => import('components/Login/Login'));\r\nconst Music = lazy(() => import('components/Music/Music'));\r\nconst Page404 = lazy(() => import('components/Page404/Page404'));\r\nconst Settings = lazy(() => import('components/Settings/Settings'));\r\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst MessagesContainer = lazy(() => import('./components/Messages/MessagesContainer'));\r\n\r\nclass App extends Component<MapDispatchPT & UserDataInitialStateType> {\r\n\r\n  catchAllUnhandledErrors = () => {\r\n    console.warn('Внимание: Необработанная ошибка Promise. Позор вам! ');\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.initializeTC();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <NavigationContainer />\r\n        <div>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Routes>\r\n              <Route path={'/'} element={<Navigate to={'/profile'} />} />\r\n              <Route path={'/samurai_way_my/'} element={<Navigate to={'/profile'} />} />\r\n              <Route path='/profile' element={<ProfileContainer />}>\r\n                <Route path=':userId' element={<ProfileContainer />} />\r\n              </Route>\r\n              <Route path={'/messages/*'} element={<MessagesContainer />} />\r\n              <Route path={'/users/'} element={<UsersContainer />} />\r\n              <Route path={'/news'} element={<News />} />\r\n              <Route path={'/music'} element={<Music />} />\r\n              <Route path={'/settings'} element={<Settings />} />\r\n              <Route path={'/login'} element={<Login />} />\r\n              <Route path={'/*'} element={<Page404 />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { AppStatePT, store } from 'redux/store_redux';\r\nimport { initializeTC, UserDataInitialStateType } from 'redux/app_reducer';\r\nimport App from 'App';\r\n\r\nexport const AppHoc = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>   {/* context */}\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport type MapDispatchPT = { initializeTC: () => void }\r\n\r\nconst mapDispatchToProps: MapDispatchPT = { initializeTC: initializeTC };\r\n\r\nconst mapStateToProps = (state: AppStatePT): UserDataInitialStateType => {\r\n  return { initialized: state.app.initialized };\r\n};\r\n\r\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport { store } from 'redux/store_redux'; // new store\r\nimport { AppHoc } from 'AppHOC';\r\n// import {store} from \"./redux/store\";\r\n\r\nlet renderEntireTree = () => {\r\n  ReactDOM.render(<AppHoc />, document.getElementById('root'));\r\n};\r\nrenderEntireTree(); // first render\r\nstore.subscribe(renderEntireTree); // next render\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { actionPT, ThunkType } from './store_redux';\r\nimport { userDataPT } from 'components/Header/Header';\r\nimport { Dispatch } from 'redux';\r\nimport { authMeAPI, loginAPIRequestType } from 'api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { ResultCode } from 'utils/enum/enum';\r\nimport { GET_CAPTCHA, SET_USER_DATA } from 'redux/constTypeAC/constTypies';\r\n\r\nexport type setUserDataACPT = ReturnType<typeof setUserDataAC>\r\nexport type getCaptchaACPT = ReturnType<typeof getCaptchaAC>\r\n\r\nexport const setUserDataAC = (data: userDataPT, isAuth: boolean) => ({\r\n  type: SET_USER_DATA,\r\n  data,\r\n  isAuth,\r\n} as const);\r\n\r\nexport const getCaptchaAC = (url: string) => ({\r\n  type: GET_CAPTCHA,\r\n  url,\r\n} as const);\r\n\r\nconst userDataInitialState: userDataPT = {\r\n  data: {\r\n    id: 1,\r\n    login: '',\r\n    email: '',\r\n  },\r\n  messages: [''],\r\n  fieldsErrors: [''],\r\n  resultCode: 1,\r\n  isAuth: false,  // it is not from API\r\n  captchaURL: '',\r\n};\r\n\r\nexport const auth_reducer = (state = userDataInitialState, action: actionPT): userDataPT => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return { ...state, ...action.data, isAuth: action.isAuth, captchaURL: '' };\r\n    case GET_CAPTCHA:\r\n      return { ...state, captchaURL: action.url };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserDataThunkCreator = () => async (dispatch: Dispatch) => {\r\n  let response = await authMeAPI.me();\r\n  if (response.resultCode === ResultCode.success) {\r\n    dispatch(setUserDataAC(response, true));\r\n  } else {\r\n    console.warn(' You are not authorised. ResultCode: ' + response.resultCode);\r\n  }\r\n};\r\n\r\nexport const setLoginThunkCreator = (userData: loginAPIRequestType): ThunkType => async (dispatch) => {\r\n  let response = await authMeAPI.login(userData);\r\n  if (response.data.resultCode === ResultCode.success) {\r\n    await dispatch(setUserDataThunkCreator()); // вызов другой санки\r\n  } else {\r\n\r\n    if (response.data.resultCode === ResultCode.captcha) {\r\n      await dispatch(getCaptchaURL_ThunkCreator());\r\n    }\r\n\r\n    let action = stopSubmit('LOGIN', {\r\n      _error: response.data.messages[0] ? response.data.messages[0] : 'something is wrong',\r\n      // ['email']: 'email is wrong',\r\n      // ['passwor' + 'd']: 'password is wrong',\r\n    });\r\n    dispatch(action);\r\n    console.warn(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport const setLogoutThunkCreator = (): ThunkType => async (dispatch) => {\r\n  let response = await authMeAPI.logout();\r\n\r\n  if (response.data.resultCode === ResultCode.success) {\r\n    // await dispatch(setUserDataThunkCreator());\r\n    let response = await authMeAPI.me();  // дублирование, заменить на вторую санку\r\n    if (response.resultCode !== ResultCode.success) {\r\n      dispatch(setUserDataAC(response, false));\r\n    } else console.warn(' You are not authorised. ResultCode: ' + response.resultCode);\r\n  }\r\n};\r\n\r\nexport const getCaptchaURL_ThunkCreator = () => async (dispatch: Dispatch) => {\r\n\r\n  let response = await authMeAPI.getCaptchaURL();\r\n  dispatch(getCaptchaAC(response.data.url));\r\n\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1JoqJ\",\"active\":\"Navigation_active__3E8Bg\",\"item\":\"Navigation_item__1f3e1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fh2h\",\"loginBlock\":\"Header_loginBlock__3MQmn\"};","import { v1 } from 'uuid';\r\nimport { actionPT } from './store_redux';\r\nimport { Dispatch } from 'redux';\r\nimport { profileAPI, ResponsePutPhoto } from 'api/api';\r\nimport { ResultCode } from 'utils/enum/enum';\r\nimport {\r\n  ADD_LIKE,\r\n  ADD_POST,\r\n  SET_PHOTO,\r\n  SET_USER_PROFILE, SET_USER_PROFILE_DATA, SET_USER_STATUS,\r\n} from 'redux/constTypeAC/constTypies';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nexport type addPostATPT = ReturnType<typeof addPostAC>\r\nexport type addLikeACPT = ReturnType<typeof addLikeAC>\r\nexport type setUserProfileACPT = ReturnType<typeof setUserProfileAC>\r\nexport type setUserStatusACPT = ReturnType<typeof setUserStatusAC>\r\nexport type setPhotoACPT = ReturnType<typeof setPhotoAC>\r\nexport type setUserProfileDataACPT = ReturnType<typeof setUserProfileDataAC>\r\n\r\nexport const addPostAC = (value: string) => ({\r\n  type: ADD_POST,\r\n  value,\r\n  id: v1(),\r\n} as const);\r\nexport const addLikeAC = (postID: string) => ({ type: ADD_LIKE, postID } as const);\r\nexport const setUserProfileAC = (profile: ProfileType) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n} as const);\r\nexport const setUserStatusAC = (status: string) => ({\r\n  type: SET_USER_STATUS,\r\n  status,\r\n} as const);\r\nexport const setPhotoAC = (file: ResponsePutPhoto) => ({\r\n  type: SET_PHOTO,\r\n  file,\r\n} as const);\r\nexport const setUserProfileDataAC = (data: ProfileDataType) => {\r\n  return {\r\n    type: SET_USER_PROFILE_DATA,\r\n    data,\r\n  } as const;\r\n};\r\n\r\nexport type initialStateProfileType = {\r\n  postData: Array<PostDataType>\r\n  newPostText: string\r\n  profile: ProfileType\r\n  status: string       // another request\r\n}\r\n\r\nexport type PostDataType = {\r\n  id: string\r\n  message: string\r\n  like: number\r\n  comment: number\r\n}\r\n\r\nexport type ProfileType = ProfileDataType & {\r\n  userId: number\r\n  photos: {\r\n    small: string\r\n    large: string\r\n  }\r\n}\r\n\r\nexport type ProfileDataType = {\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  aboutMe: string\r\n}\r\n\r\nexport type ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\n\r\nconst initialState: initialStateProfileType = {\r\n  postData: [\r\n    {\r\n      id: v1(),\r\n      message: 'Kiss me hard before you go Summertime sadness',\r\n      like: 2,\r\n      comment: 4,\r\n    },\r\n    {\r\n      id: v1(),\r\n      message: 'I just wanted you to know That baby you\\'re the best',\r\n      like: 7,\r\n      comment: 8,\r\n    },\r\n  ],    // it is not from API\r\n  newPostText: 'stock', // it is not from API\r\n  profile: {\r\n    userId: 0,\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: 'stock',\r\n    fullName: 'test',\r\n    contacts: {\r\n      vk: 'stock',\r\n      github: 'stock',\r\n      facebook: 'stock',\r\n      instagram: 'stock',\r\n      mainLink: 'stock',\r\n      twitter: 'stock',\r\n      website: 'stock',\r\n      youtube: 'stock',\r\n    },\r\n    aboutMe: 'stock',\r\n    photos: {\r\n      small: 'stock',\r\n      large: 'stock',\r\n    },\r\n  },\r\n  status: 'default status',\r\n};\r\n\r\nexport const profile_reducer = (state = initialState, action: actionPT): initialStateProfileType => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: action.id,\r\n        message: action.value, // action.newText from redux form\r\n        like: 0,\r\n        comment: 0,\r\n      };\r\n      return { ...state, postData: [newPost, ...state.postData], newPostText: '' };\r\n    // case CHANGE_POST:\r\n    //     return {...state, newPostText: action.newText}\r\n    case ADD_LIKE:\r\n      return {\r\n        ...state, postData: state.postData\r\n          .map(post => post.id === action.postID ? {\r\n            ...post,\r\n            like: post.like + 1,\r\n          } : post),\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile };\r\n    case SET_USER_STATUS:\r\n      return { ...state, status: action.status };\r\n    case SET_PHOTO:\r\n      return {\r\n        ...state, profile: { ...state.profile, photos: action.file.photos },\r\n      };\r\n    case SET_USER_PROFILE_DATA:\r\n\r\n      let {\r\n        lookingForAJobDescription,\r\n        lookingForAJob,\r\n        aboutMe,\r\n        fullName,\r\n        contacts,\r\n      } = action.data;\r\n\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          aboutMe: aboutMe,\r\n          contacts: {\r\n            ...contacts,\r\n          },\r\n          lookingForAJob: false,\r\n          lookingForAJobDescription: lookingForAJobDescription,\r\n          fullName: fullName,\r\n          userId: 0,\r\n          photos: {\r\n            small: 'stock',\r\n            large: 'stock',\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserThunkCreator = (userId: string) => async (dispatch: Dispatch) => {\r\n  let response = await profileAPI.getUserData(userId);\r\n\r\n  dispatch(setUserProfileAC(response));\r\n\r\n};\r\n\r\nexport const setUserStatusThunkCreator = (userId: string) => async (dispatch: Dispatch) => {\r\n  let response = await profileAPI.getUserStatus(userId);\r\n\r\n  if (response) {\r\n    dispatch(setUserStatusAC(response));\r\n  } else {\r\n    dispatch(setUserStatusAC('status from API is null'));\r\n  }\r\n};\r\n\r\nexport const updateUserStatusThunkCreator = (status: string) => async (dispatch: Dispatch) => {\r\n  let response = await profileAPI.updateUserStatus({ status });\r\n  console.log(response);\r\n  if (response.resultCode === ResultCode.success) {\r\n    dispatch(setUserStatusAC(status));  // если запрос успешный, то обнови статус на тот, который отправил\r\n  } else {\r\n    console.warn(response.messages[0]);\r\n  }\r\n};\r\n\r\nexport const putPhotoThunkCreator = (file: File) => async (dispatch: Dispatch) => {\r\n\r\n  let response = await profileAPI.putPhoto(file);\r\n  if (response.resultCode === ResultCode.success) {\r\n    dispatch(setPhotoAC(response.data));\r\n  }\r\n};\r\n\r\nexport const setProfileDataThunkCreator = (data: ProfileDataType, userId: string, setEditMod: (value: boolean) => void) => async (dispatch: Dispatch) => {\r\n  let response = await profileAPI.updateUserData(data);\r\n  if (response.resultCode === ResultCode.success) {\r\n    let response = await profileAPI.getUserData(userId); // дублирование .. как запустить вторую санку ?\r\n    dispatch(setUserProfileAC(response));\r\n    setEditMod(false);\r\n  } else {\r\n    let action = stopSubmit('PROFILE', {\r\n      // contacts: { vk: 'error' }, нужно распарсить строку\r\n      _error: response.messages[0] ? response.messages[0] : 'something is wrong',\r\n    });\r\n    dispatch(action);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/blak_water.3ed3be3a.gif\";","import style from '../Users/Users.module.css';\r\nimport loader from '../Users/imgAva/blak_water.gif';\r\nimport { memo } from 'react';\r\n\r\nexport const Preloader = memo(() => {\r\n  return <img className={style.loader} alt={'loader'} src={loader} />;\r\n});","// profile\r\nexport const ADD_POST = 'ADD-POST';\r\nexport const SET_PHOTO = 'SET_PHOTO';\r\nexport const ADD_LIKE = 'ADD_LIKE';\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nexport const SET_USER_STATUS = 'SET_USER_STATUS';\r\nexport const SET_USER_PROFILE_DATA = 'SET_USER_PROFILE_DATA';\r\n\r\n// auth\r\nexport const SET_USER_DATA = 'SET_USER_DATA';\r\nexport const GET_CAPTCHA = 'GET_CAPTCHA';\r\n\r\n// app\r\nexport const SET_INITIALIZED = 'APP_REDUCER/SET_INITIALIZED';\r\n\r\n// dialogs\r\nexport const ADD_TEXT_MESSAGE = 'ADD_TEXT_MESSAGE';\r\n\r\n// users\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const TOGGLE_IS_FETCHING_PAGE = 'TOGGLE_IS_FETCHING_PAGE';\r\nexport const TOGGLE_IS_FETCHING_USER = 'TOGGLE_IS_FETCHING_USER';","import { actionPT } from './store_redux';\r\nimport { dialogsItemsPT } from 'components/Messages/MessagesContainer';\r\nimport { ADD_TEXT_MESSAGE } from 'redux/constTypeAC/constTypies';\r\n\r\nexport type addTextMessageATPT = ReturnType<typeof addTextMessageAC>\r\n\r\n\r\n\r\nexport const addTextMessageAC = (value: string) => ({\r\n  type: ADD_TEXT_MESSAGE,\r\n  value,\r\n} as const);\r\n\r\nconst initialState: dialogsItemsPT =\r\n  {\r\n    dialogs: [\r\n      {\r\n        id: 1,\r\n        name: 'Alexa',\r\n        ava: 'https://wl-adme.cf.tsp.li/resize/728x/jpg/828/489/b2756c5cdd8b6216f063d69448.jpg',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Olga',\r\n        ava: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRyOavUGIwOOX3ETRRyYRX5i6cckfejkOGGZuuzC49v3Kn9fts9Af4l3JsKYc1SxZb3VU&usqp=CAU',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Anna',\r\n        ava: 'https://www.meme-arsenal.com/memes/45e5d421b1445a06da4d6850fcafdb1a.jpg',\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Yra',\r\n        ava: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Arnold_Schwarzenegger_by_Gage_Skidmore_3.jpg/250px-Arnold_Schwarzenegger_by_Gage_Skidmore_3.jpg',\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'Mary',\r\n        ava: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGxVCtR7JN6dLYj0xMPGyB0n-cSqxx7DQpLrf34ZuJHv4UhUeJlf5TCgyBg4IwWroZIFE&usqp=CAU',\r\n      },\r\n    ],\r\n    messages: [\r\n      { id: 1, text: 'Hi' },\r\n      { id: 2, text: 'How are you' },\r\n      { id: 3, text: 'Good' },\r\n      { id: 4, text: 'Yo' },\r\n      { id: 5, text: 'Yo' },\r\n    ],\r\n  };\r\n\r\nexport const dialogs_reducer = (state: dialogsItemsPT = initialState, action: actionPT): dialogsItemsPT => {\r\n\r\n  switch (action.type) {\r\n    case ADD_TEXT_MESSAGE:\r\n      let newPost = { id: 2, text: action.value };\r\n      let copyState = {\r\n        ...state,\r\n        messages: state.messages.map(el => ({ ...el })),\r\n      };\r\n      copyState.messages.push(newPost);\r\n      return copyState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { actionPT } from './store_redux';\r\nimport { UserPT, UsersStatePT } from 'components/Users/UsersContainer';\r\nimport { Dispatch } from 'redux';\r\nimport { followAPI, UserAPI } from 'api/api';\r\nimport { ResultCode } from 'utils/enum/enum';\r\nimport {\r\n  CHANGE_PAGE,\r\n  FOLLOW,\r\n  SET_USERS,\r\n  TOGGLE_IS_FETCHING_PAGE, TOGGLE_IS_FETCHING_USER,\r\n} from 'redux/constTypeAC/constTypies';\r\n\r\ntype API_methodType = typeof followAPI.setUnFollow\r\n\r\nexport type followATPT = ReturnType<typeof followAC>\r\nexport type setUsersATPT = ReturnType<typeof setUsersAC>\r\nexport type changePageACPT = ReturnType<typeof changePageAC>\r\nexport type toggleIsFetchingPageACPT = ReturnType<typeof toggleIsFetchingPageAC>\r\nexport type toggleIsFetchingUserACPT = ReturnType<typeof toggleIsFetchingUserAC>\r\n\r\nexport const followAC = (userID: number) => ({ type: FOLLOW, userID } as const);\r\nexport const setUsersAC = (users: UserPT[], totalCount: number) => ({\r\n  type: SET_USERS,\r\n  users,\r\n  totalCount,\r\n} as const);\r\nexport const changePageAC = (pageID: number) => ({\r\n  type: CHANGE_PAGE,\r\n  pageID,\r\n} as const);\r\nexport const toggleIsFetchingPageAC = (isFetchingPage: boolean) => ({\r\n  type: TOGGLE_IS_FETCHING_PAGE,\r\n  isFetchingPage,\r\n} as const);\r\nexport const toggleIsFetchingUserAC = (isFetchingUser: boolean, userID: number) => ({\r\n  type: TOGGLE_IS_FETCHING_USER,\r\n  isFetchingUser,\r\n  userID,\r\n} as const);\r\n\r\nlet usersState: UsersStatePT = {\r\n  items: [\r\n    {\r\n      id: 0,\r\n      name: 'null',\r\n      status: 'null',\r\n      photos: { small: 'null', large: 'null' },\r\n      followed: false,\r\n      isFetchingUser: false,  // add this key  myself\r\n    }],\r\n  pageSize: 4,\r\n  totalCount: 36,\r\n  error: 'Error',\r\n  currentPage: 1,\r\n  isFetchingPage: true,          // add this key  myself\r\n};\r\n\r\nexport const users_reducer = (state: UsersStatePT = usersState, action: actionPT): UsersStatePT => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state, items: state.items\r\n          .map(user => user.id === action.userID ? {\r\n            ...user,\r\n            followed: !user.followed,\r\n          } : user),\r\n      };\r\n    case SET_USERS:\r\n      return { ...state, items: action.users, totalCount: action.totalCount };\r\n    case CHANGE_PAGE:\r\n      return { ...state, currentPage: action.pageID };\r\n    case TOGGLE_IS_FETCHING_PAGE:\r\n      return { ...state, isFetchingPage: action.isFetchingPage };\r\n    case TOGGLE_IS_FETCHING_USER:\r\n      return {\r\n        ...state, items: state.items\r\n          .map(user => user.id === action.userID ? {\r\n            ...user,\r\n            isFetchingUser: action.isFetchingUser,\r\n          } : user),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setPageThunkCreator = (pageID: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n  dispatch(toggleIsFetchingPageAC(true));\r\n  dispatch(changePageAC(pageID));\r\n  let response = await UserAPI.setUserOnPageAPI(pageID, pageSize);\r\n  dispatch(setUsersAC(response.items, response.totalCount));\r\n  dispatch(toggleIsFetchingPageAC(false));\r\n};\r\n\r\nconst followUnfollowCB = async (userID: number, dispatch: Dispatch, API_method: API_methodType) => {\r\n  dispatch(toggleIsFetchingUserAC(true, userID));\r\n  let response = await API_method(userID);\r\n  if (response.resultCode === ResultCode.success) {\r\n    dispatch(followAC(userID));\r\n    dispatch(toggleIsFetchingUserAC(false, userID));\r\n  }\r\n};\r\n\r\nexport const unFollowThunkCreator = (userID: number) => async (dispatch: Dispatch) => {\r\n  await followUnfollowCB(userID, dispatch, followAPI.setUnFollow);\r\n};\r\n\r\nexport const followThunkCreator = (userID: number) => async (dispatch: Dispatch) => {\r\n  await followUnfollowCB(userID, dispatch, followAPI.setFollow);\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_div\":\"Users_main_div__2ONGl\",\"main_div2\":\"Users_main_div2__18coC\",\"buttons_pages\":\"Users_buttons_pages__2JlFY\",\"current\":\"Users_current__1rDG_\",\"loader\":\"Users_loader__3wz82\"};","import axios, { AxiosResponse } from 'axios';\r\nimport { UsersStatePT } from 'components/Users/UsersContainer';\r\nimport { userDataPT } from 'components/Header/Header';\r\nimport { ProfileDataType, ProfileType } from 'redux/profile_reducer';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  withCredentials: true,\r\n  headers: { 'API-KEY': process.env.REACT_APP_API_KEY as string },\r\n});\r\n\r\nexport type loginAPIRequestType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captchaURL: string\r\n}\r\n\r\nexport type CommonResponseType<T = {}> = {\r\n  data: T\r\n  fieldsErrors: []\r\n  messages: string[]\r\n  resultCode: number\r\n}\r\n\r\ntype loginAPIResponseType = {\r\n  userId: number\r\n}\r\n\r\ntype getCaptchaURLPT = {\r\n  url: string\r\n}\r\n\r\nexport const authMeAPI = {\r\n\r\n  me() {\r\n    return instance\r\n      .get<userDataPT>('auth/me')\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  login(data: loginAPIRequestType) {\r\n    return instance\r\n      .post<CommonResponseType<loginAPIResponseType>>('/auth/login', data)\r\n      .then((response) => {\r\n        return response;\r\n      }).catch((res) => res);\r\n  },\r\n  logout() {\r\n    return instance.delete<null, AxiosResponse<CommonResponseType>>('/auth/login');\r\n  },\r\n  getCaptchaURL() {\r\n    return instance.get<getCaptchaURLPT>('/security/get-captcha-url');\r\n  },\r\n};\r\n\r\nexport type ResponsePutPhoto = {\r\n  photos: {\r\n    small: string\r\n    large: string\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  putPhoto(image: File) {\r\n    let formData = new FormData();\r\n    formData.append('image', image);\r\n    return instance\r\n      .put<CommonResponseType<ResponsePutPhoto>>('/profile/photo', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  getUserData(userID: string) {\r\n    return instance\r\n      .get<ProfileType>('profile/' + userID)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  getUserStatus(userID: string) {\r\n    return instance\r\n      .get<string>('/profile/status/' + userID)\r\n      .then((response) => {\r\n          return response.data;   // только строка\r\n        },\r\n      ).catch(rej => rej);\r\n  },\r\n  updateUserStatus(status: { status: string }) {\r\n    return instance\r\n      .put<CommonResponseType>('/profile/status', status) // 2 argument -  Media type: application/json\r\n      .then((state) => {\r\n        return state.data;\r\n      });\r\n  },\r\n  updateUserData(data: ProfileDataType) {\r\n    return instance\r\n      .put<CommonResponseType>('/profile', { ...data })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n\r\nexport const UserAPI = {\r\n  setUserOnPageAPI(pageID: number, pageSize: number) {\r\n    return instance\r\n      .get<UsersStatePT>(`users?page=${pageID}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n\r\nexport const followAPI = {\r\n\r\n  setUnFollow: (userID: number) => {\r\n    return instance\r\n      .delete<CommonResponseType>('follow/' + userID)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  setFollow: (userID: number) => {\r\n    return instance\r\n      .post<CommonResponseType>('follow/' + userID)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n"],"sourceRoot":""}